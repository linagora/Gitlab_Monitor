
# # --- Copyright (c) 2024 Linagora
# # licence       : Apache 2.0
# # - Flavien Perez fperez@linagora.com
# # - Maïlys Jara mjara@linagora.com



include:
 - local: '/gitlab-ci_templates/build-dev.yml'
 - local: '/gitlab-ci_templates/build-doc.yml'
 - local: '/gitlab-ci_templates/build-prod.yml'
 - local: '/gitlab-ci_templates/linter.yml'
 - local: '/gitlab-ci_templates/security.yml'

variables:
  PROJECT_PATH: ./gitlab_monitor
  HARBOR_REGISTRY: "docker-registry.linagora.com"
  IMAGE_CACHE: "gitlab-monitor/gitlab-monitor-dev"
  DOCKER_TLS_CERTDIR: "/certs"
  CACHE_TAG: "1.0.0-dev"

default:
  tags:
    - stage
  image: $HARBOR_REGISTRY/$IMAGE_CACHE:$CACHE_TAG

stages:
  - build
  - test
  - package-build
  - publish
  - production

# ##################################################################
# #                 BUILD STAGE: BUILD & TESTS                     #
# ##################################################################

build-dev-env:
  stage: build
  extends: .build_dev_env

build-documentation:
  stage: build
  extends: .build_documentation
  needs: []

build-prod-env:
  stage: build
  extends: .build_prod_env
  needs: []

# unit_tests:
#   stage: build
#   extends: .tests # TODO: a impléménter avant chaque feature

# ##################################################################
# #            TEST STAGE: CODE QUALITY & SECURITY                 #
# ##################################################################

py-lint:
  stage: test
  extends: .py-lint
  needs: []

py-black:
  stage: test
  extends: .py-black
  needs: []

py-isort:
  stage: test
  extends: .py-isort
  needs: []

pycln:
  stage: test
  extends: .pycln
  needs: []

mypy:
  stage: test
  extends: .mypy
  needs: []

py-bandit:
  stage: test
  extends: .py-bandit
  needs: []

py-trivy:
  stage: test
  extends: .py-trivy
  needs: []

slsa-1:
  stage: test
  extends: .slsa-1
  needs: []

# ##################################################################
# #                    BUILD PACKAGES STAGE                        #
# ##################################################################

# build-package:
#   stage: build-package
#   script:
#     - poetry build -f wheel
#   artifacts:
#     paths:
#       - dist/*.whl
#   needs: []

# ##################################################################
# #                   PUBLISH PACKAGES STAGE                       #
# ##################################################################

# publish-package:
#   stage: publish
#   before_script:
#     - pip install twine
#   script:
#     - rm -rf dist/* # good practice : au lieu de cette ligne changer le "dist/*" plus bas
#     - python3 setup.py sdist bdist_wheel
#     - twine upload -u $NEXUS_PYPI_BOT_USERNAME -p $NEXUS_PYPI_BOT_PASSWORD --repository-url $NEXUS_PYPI_URL dist/* #dist/nom_du_fichier_version-concernée.whl
#   needs: [build-package]

# ##################################################################
# #                 PRODUCTION STAGE: DEPLOY                       #
# ##################################################################

trigger_pipeline:
  stage: production
  script:
    - 'curl --fail --request POST --form token=$TRIGGER_TOKEN_PIPELINE --form ref=main "https://ci.linagora.com/linagora/devops/gitlab-manager/gitlab-monitor-deploy"'
  needs: []
# ajouter une rule et un environement ?